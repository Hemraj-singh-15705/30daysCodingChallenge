1652.                                           Defuse the Bomb
*************************************************************************************************************************************************************
Question :~
              You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.
              To decrypt the code, you must replace every number. All the numbers are replaced simultaneously.
              If k > 0, replace the ith number with the sum of the next k numbers.
              If k < 0, replace the ith number with the sum of the previous k numbers.
              If k == 0, replace the ith number with 0.
              As code is circular, the next element of code[n-1] is code[0], and the previous element of code[0] is code[n-1].
              Given the circular array code and an integer key k, return the decrypted code to defuse the bomb!
*************************************************************************************************************************************************************
Solution :~

class Solution {
    public int[] decrypt(int[] code, int k) {
        int len = code.length;
        int[] res =  new int[len];
        if( k==0 ){
            for(int i=0; i<len; i++){
                res[i] =  0;
            }
        }
        else if(k > 0 ){
            for(int i=0; i<len; i++){
                for(int j=1;j<=k; j++){
                    res[i]=res[i]+code[(i+j)%len];
                }
            }
        }
        else{
            for(int i=0; i<len; i++){
                for(int j=-1;j>=k; j--){
                    int index = (i+j)%len;
                    if(index < 0){
                        index = len+index;
                    }
                    res[i] = res[i] +code[index];
                }
            }

            }
        return res;
    }
}
