leetcode 2981.                                                                             Find Longest Special Substring That Occurs Thrice I
**********************************************************************************************************************************************************
Question :~
You are given a string s that consists of lowercase English letters.

A string is called special if it is made up of only a single character. For example, the string "abc" is not special, whereas the strings "ddd", "zz", and "f" are special.

Return the length of the longest special substring of s which occurs at least thrice, or -1 if no special substring occurs at least thrice.

A substring is a contiguous non-empty sequence of characters within a string.
***************************************************************************************************************************************************************
Solution :~
class Solution {
    public int maximumLength(String s) {
        int n = s.length();
        int[][] matrix = new int[26][n + 1]; // Matrix to store counts for each character and length
        char prevChar = s.charAt(0);
        int length = 0;

        // Populate the matrix
        for (int i = 0; i < n; i++) {
            char currChar = s.charAt(i);

            if (currChar == prevChar) {
                length += 1;
                matrix[currChar - 'a'][length] += 1;
            } else {
                length = 1;
                matrix[currChar - 'a'][length] += 1;
                prevChar = currChar;
            }
        }

        int result = 0;

        // Calculate the result by checking cumulative sums in reverse order
        for (int i = 0; i < 26; i++) {
            int cumSum = 0;
            for (int j = n; j >= 1; j--) {
                cumSum += matrix[i][j];
                if (cumSum >= 3) {
                    result = Math.max(result, j);
                    break;
                }
            }
        }

        return result == 0 ? -1 : result;
    }
}
