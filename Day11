leetcode 503.                                     Next Greater Element II 
****************************************************************************************************************************************************************
Question :~ 
            Given a circular integer array nums (i.e., the next element of nums[nums.length - 1] is nums[0]), return the next greater number for every element in nums.
The next greater number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. 
If it doesn't exist, return -1 for this number.
******************************************************************************************************************************************************************************************
Solution :~

import java.util.Stack;

class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int n = nums.length;
        int[] nxtGreater = new int[n];
        Stack<Integer> s = new Stack<>();
        
        for (int i = 0; i < n; i++) {
            nxtGreater[i] = -1;
        }
        
        for (int i = 0; i < 2 * n; i++) {
            int num = nums[i % n];
        
            while (!s.isEmpty() && nums[s.peek()] < num) {
                nxtGreater[s.pop()] = num;
            }
            if (i < n) {
                s.push(i);
            }
        }
        
        return nxtGreater;
    }
}
